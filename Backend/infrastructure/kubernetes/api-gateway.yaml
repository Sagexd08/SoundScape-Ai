apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: soundscape
  labels:
    app: api-gateway
    component: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-gateway
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: api-gateway
        component: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: api-gateway
          image: ${AWS_ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/soundscape-ai/api-gateway:${VERSION}
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              name: http
          env:
            - name: NODE_ENV
              value: "production"
            - name: PORT
              value: "8000"
            - name: CORS_ORIGIN
              value: "https://soundscape-ai.com"
            - name: AUTH_SERVICE_URL
              value: "http://auth-service:4000"
            - name: USER_SERVICE_URL
              value: "http://user-service:4001"
            - name: AUDIO_PROCESSOR_URL
              value: "http://audio-processor:4002"
            - name: STORAGE_SERVICE_URL
              value: "http://storage-service:4003"
            - name: RECOMMENDATION_ENGINE_URL
              value: "http://recommendation-engine:4004"
            - name: ANALYTICS_SERVICE_URL
              value: "http://analytics-service:4005"
            - name: NOTIFICATION_SERVICE_URL
              value: "http://notification-service:4006"
            - name: SUPABASE_URL
              valueFrom:
                secretKeyRef:
                  name: supabase-credentials
                  key: url
            - name: SUPABASE_ANON_KEY
              valueFrom:
                secretKeyRef:
                  name: supabase-credentials
                  key: anon-key
          resources:
            limits:
              cpu: "1"
              memory: "1Gi"
            requests:
              cpu: "200m"
              memory: "512Mi"
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 2
          startupProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 12
          volumeMounts:
            - name: config-volume
              mountPath: /app/config
            - name: tmp-volume
              mountPath: /tmp
      volumes:
        - name: config-volume
          configMap:
            name: api-gateway-config
        - name: tmp-volume
          emptyDir: {}
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      serviceAccountName: api-gateway-sa
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - api-gateway
                topologyKey: "kubernetes.io/hostname"
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: soundscape
  labels:
    app: api-gateway
    component: backend
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
      name: http
  selector:
    app: api-gateway
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: api-gateway-sa
  namespace: soundscape
  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:iam::${AWS_ACCOUNT_ID}:role/soundscape-api-gateway-role"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-gateway-ingress
  namespace: soundscape
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
    - hosts:
        - api.soundscape-ai.com
      secretName: soundscape-tls
  rules:
    - host: api.soundscape-ai.com
      http:
        paths:
          - path: /(.*)
            pathType: Prefix
            backend:
              service:
                name: api-gateway
                port:
                  number: 8000
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-gateway-hpa
  namespace: soundscape
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-gateway
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 10
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
        - type: Percent
          value: 100
          periodSeconds: 60
        - type: Pods
          value: 4
          periodSeconds: 60
      selectPolicy: Max
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: api-gateway-pdb
  namespace: soundscape
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: api-gateway
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-gateway-config
  namespace: soundscape
data:
  app-config.json: |
    {
      "rateLimits": {
        "auth": {
          "windowMs": 900000,
          "max": 30
        },
        "api": {
          "windowMs": 900000,
          "max": 500
        }
      },
      "cors": {
        "allowedOrigins": ["https://soundscape-ai.com"],
        "allowedMethods": ["GET", "POST", "PUT", "DELETE", "PATCH"],
        "allowedHeaders": ["Content-Type", "Authorization"]
      },
      "security": {
        "enableHelmet": true,
        "csrfProtection": true
      },
      "metrics": {
        "enabled": true,
        "prefix": "api_gateway_"
      }
    }